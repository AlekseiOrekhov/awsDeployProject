# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Gradle Package

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
    - name: Build with Gradle
      run: |
        ./gradlew build

    - name: login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }} 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOKCERHUB_REPOSITORY_NAME }}:latest
        
    - name: Stop all containers
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_ECR_REGISTRY_IP }}
        username: ${{ secrets.AWS_SSH_USER }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        script: |
          docker stop $(docker ps -aq) || true

    - name: Delete all images
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_ECR_REGISTRY_IP }}
        username: ${{ secrets.AWS_SSH_USER }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        script: |
          docker rmi $(docker images -q) || true
          
    - name: Pull new image from dockerHub
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_ECR_REGISTRY_IP }}
        username: ${{ secrets.AWS_SSH_USER }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        script: |
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOKCERHUB_REPOSITORY_NAME }}:latest
